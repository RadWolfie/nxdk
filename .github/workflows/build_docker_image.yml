name: Build Docker image

on:
  push:

jobs:
  main:
    name: Docker
    #if: github.repository_owner == 'XboxDev'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        #image-name: [nxdk, nxdk-debug, nxdk-lto]
        image-name: [nxdk-debug]
        include:
          #- image-name: nxdk
          #  build-args: buildparams=CFLAGS=-O2 CXXFLAGS=-O2
          - image-name: nxdk-debug
            build-args: buildparams=DEBUG=y
          #- image-name: nxdk-lto
          #  build-args: buildparams=LTO=y CFLAGS=-O2 CXXFLAGS=-O2
    steps:
      - name: Clone Tree
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup environments for docker
        run: |
          echo "timestamp=$(date --rfc-3339=seconds --utc)" >> $GITHUB_ENV
          DOCKER_IMAGE=$(echo ${{ github.repository_owner }}/${{ matrix.image-name }}|tr '[:upper:]' '[:lower:]')
          echo "DOCKER_IMAGE=${DOCKER_IMAGE}" >> $GITHUB_ENV
          #DOCKER_TAGS="ghcr.io/${DOCKER_IMAGE}:latest,ghcr.io/${DOCKER_IMAGE}:git-${GITHUB_SHA::8}"
          # Test append
          DOCKER_TAGS="ghcr.io/${DOCKER_IMAGE}:latest,ghcr.io/${DOCKER_IMAGE}:git-${GITHUB_SHA::8}"
          DOCKER_TAGS="${DOCKER_TAGS},ghcr.io/${DOCKER_IMAGE}:git-${GITHUB_SHA::8}"
          if [ "${{ github.repository_owner }}" == "XboxDev" ]; then
            DOCKER_TAGS="${DOCKER_TAGS},${DOCKER_IMAGE}:latest,${DOCKER_IMAGE}:git-${GITHUB_SHA::8}"
          fi
          echo "DOCKER_TAGS=${DOCKER_TAGS}" >> $GITHUB_ENV
      # required for platforms support
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      #- name: Generate timestamp
      #  id: timestamp
      #  run: echo "timestamp=$(date --rfc-3339=seconds --utc)"
      #- name: Set docker image
      #  run: |
      #    echo "DOCKER_IMAGE=${{ matrix.image-name }}|tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      #- name: Generate tags
      #  id: tags
      #  run: |
      #    #TAGS="${DOCKER_IMAGE}:latest"
      #    #TAGS="$TAGS,${DOCKER_IMAGE}:git-${GITHUB_SHA::8}"
      #    TAGS="ghcr.io/${DOCKER_IMAGE}:git-${GITHUB_SHA::8}"
      #    TAGS="$TAGS,ghcr.io/${DOCKER_IMAGE}:latest"
      #    echo "tags=${TAGS}" >> $GITHUB_OUTPUT
      #- name: Set up Docker Buildx
      #  uses: docker/setup-buildx-action@v2
      #- name: Login to DockerHub
      #  uses: docker/login-action@v2
      #  with:
      #    username: ${{ secrets.DOCKERHUB_USERNAME }}
      #    password: ${{ secrets.DOCKERHUB_TOKEN }}
      #
      # Now do samples build here...
      #
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build docker image
      #  run: |
      #    docker build --build-arg buildparams="${{ matrix.build-args }}" -t ${{ matrix.image-name }} . \
      #      --label "org.opencontainers.image.revision=${{ github.sha }}" \
      #      --label "org.opencontainers.image.created=$(date --rfc-3339=seconds --utc)"
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          build-args: ${{ matrix.build-args }}
          platforms: linux/amd64,linux/386
          push: true
          tags: ${{ env.DOCKER_TAGS }}
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ env.timestamp }}
      #- name: Push
      #  run: |
      #    DOCKER_IMAGE=${{ github.repository_owner }}/${{ matrix.image-name }}
      #    docker tag ${{ matrix.image-name }} ghcr.io/${DOCKER_IMAGE}:latest
      #    docker tag ${{ matrix.image-name }} ghcr.io/${DOCKER_IMAGE}:git-${GITHUB_SHA::8}
      #    docker push ghcr.io/${DOCKER_IMAGE}:git-${GITHUB_SHA::8}
      #    docker push ghcr.io/${DOCKER_IMAGE}:latest
