name: Build Docker image

on:
  push:

jobs:
  main:
    name: Docker
    #if: github.repository_owner == 'XboxDev'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        #image-name: [nxdk, nxdk-debug, nxdk-lto]
        image-name: [nxdk-debug]
        include:
          #- image-name: nxdk
          #  build-args: buildparams=CFLAGS=-O2 CXXFLAGS=-O2
          - image-name: nxdk-debug
            build-args: buildparams=DEBUG=y
          #- image-name: nxdk-lto
          #  build-args: buildparams=LTO=y CFLAGS=-O2 CXXFLAGS=-O2
    steps:
      - name: Clone Tree
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup default environments for docker
        run: |
          echo "timestamp=$(date --rfc-3339=seconds --utc)" >> $GITHUB_ENV
          DOCKER_USER_IMAGE=$(echo ${{ github.repository_owner }}/${{ matrix.image-name }}|tr '[:upper:]' '[:lower:]')
          echo "DOCKER_USER_IMAGE=${DOCKER_USER_IMAGE}" >> $GITHUB_ENV
          DOCKER_TAG=ghcr.io/${DOCKER_USER_IMAGE}:latest
          echo "DOCKER_TAG=${DOCKER_TAG}" >> $GITHUB_ENV
          echo "DOCKER_TAGS=${{ matrix.image-name }},${DOCKER_TAG},ghcr.io/${DOCKER_USER_IMAGE}:git-${GITHUB_SHA::8}" >> $GITHUB_ENV
      - name: Setup DockerHub tags
        if: github.repository_owner == 'XboxDev' && github.ref == 'refs/heads/master'
        run: echo "DOCKER_TAGS=${{ env.DOCKER_TAGS }},${ env.DOCKER_USER_IMAGE}:latest,${{ env.DOCKER_USER_IMAGE }}:git-${GITHUB_SHA::8}" >> $GITHUB_ENV
      # required for platforms support
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      # Do the build only.
      - name: Build docker image
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          build-args: ${{ matrix.build-args }}
          load: true
          #push: false
          tags: ${{ env.DOCKER_TAGS }}
      - name: Inspect docker images (after first build)
        run: docker image ls -a --digests
      - name: Test Docker image
        run: |
          cd samples
          for dir in */
          do
            cd "$dir"
            # using imageid works.
            #docker run --rm -v `pwd`:/usr/src/app -t ${{ steps.build.outputs.imageid }} make -j`nproc`
            docker run --rm -v `pwd`:/usr/src/app -t ${{ matrix.image-name }} make -j`nproc`
            cd ..
          done
      - name: Inspect docker images (after test run)
        run: docker image ls -a --digests
      - name: Login to DockerHub
        if: github.repository_owner == 'XboxDev' && github.ref == 'refs/heads/master'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        #TODO: Uncomment below for production use
        #if: github.ref == 'refs/heads/master'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push docker image
        #TODO: Uncomment below for production use
        #if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64 #,linux/386 #temp disable 386 to verify it doesn't re-build?
          push: false #true
          tags: ${{ env.DOCKER_TAGS }}
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ env.timestamp }}
      - name: Inspect docker images (after push)
        run: docker image ls -a --digests
